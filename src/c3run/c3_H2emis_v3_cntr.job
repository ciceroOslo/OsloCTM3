#!/bin/bash
# Script for running on Saga.
# --------------------------------------------------------------------------
# Job name (enter your distinct job name):
#SBATCH --job-name=CTM3_git_H2emis_CNTR_yr5_test
#
# Project (enter your noturn project number):
#SBATCH --account=nn9188k
#
# Wall clock limit (setting for one year 96:0:0):
#SBATCH --time=15:00:0
##SBATCH --time=150:00:0
##SBATCH --time=80:00:0
##SBATCH --time=28:00:0
###SBATCH --qos=devel
#
# Does your job exceed one week, use "--partition=long":
# ####SBATCH --partition=long
#
# Max memory usage (CPU < 16: 6000; CPU >= 16 3000):
#SBATCH --mem-per-cpu=3600M
###SBATCH --mem-per-cpu=60000M
#
# Number of cores:
#SBATCH --ntasks=1
###SBATCH --cpus-per-task=1
#SBATCH --cpus-per-task=16
#
# Number of nodes:
#SBATCH --nodes=1
#
#
## Set up job environment:
#set -o errexit  # Exit the script on any error
set -o nounset  # Treat any unset variables as an error
# --------------------------------------------------------------------------
# No need to change this section
#---------------------------------------------------------------------------
# Must set large stack size (unlimited for simplicity)
ulimit -s unlimited
# Set ulimit also to unlimited (probably not necessary)
ulimit unlimited
# Print out information about ulimit
ulimit -a

# allocate specified memory to each thread (100M)
export THREAD_STACKSIZE=300m
#   ifort uses KMP_STACKSIZE
export KMP_STACKSIZE=$THREAD_STACKSIZE

# the PID number is first the date then an uniqe shell pid
export PID=`date +"%d%m%y".$$`

# --------------------------------------------------------------------------
# Do changes here
# --------------------------------------------------------------------------
# Model input data
export INPUT_DATA=$CTM3_INPUT

# Model dir - enter your directory here
export MODELDIR=$CTM3_ROOT

export CYY=2010

# Project/scenario diectory (place of this file and your .inp)
export SCENDIR=c3run

# Scenario name (use job name or change to whatever you like)
export SCEN=$SLURM_JOB_NAME

# Scratch directory
export SCRATCH=$WORK/$SCEN

# Result directory (where your files end up)
export RESULTDIR=$WORK/$SCEN.$PID

# Restart directory (where restart files will be placed)
export RESTARTDIR=$RESULTDIR/restart_$PID
#Renamed Ltracer_emis_ceds17_2010_forAeroCom_saga_testiso_add_alc.inp Ltracer_emis_ceds17_2010_H2conc.inp
#Renamed: L60CTM_saga_met_2010_H2_testiso_addalc_2yr.inp L60CTM_saga_met_2010_H2conc_2yr.inp

# Set input file name
export INPUTFILE=L60CTM_saga_met_${CYY}_H2emis_2yr.inp
export EMISFILE= Ltracer_emis_ceds17_${CYY}_h2_emission.inp 
export EMISFILE_OUT=Ltracer_emis_ceds17_h2emis.inp

#export H2SURF=/cluster/projects/nn9188k/ragnhibs/H2_INPUT/hydrogen_concentrations_average_lowess.nc
export CH4SURF=/cluster/projects/nn9188k/ragnhibs/H2_INPUT/methane_concentrations_1by1.nc 

# Name of main program
export PROGFILE=osloctm3

# Job file (this file)
export JOBFILENAME=c3_H2_jobfile.job

# The dust file
export DUSTFILE=OSLO/DEAD_COLUMN/dustinput/dst_T159.nc

# Load a restart file 
# ! In example.inp: LNCR T: use restart file in netCD/cluster/work/users/ragnhibs/CTM3_H2emis_cntr_yr4.061221.13385/F, F: old .sav format


export RESTARTFILE=$CTM3_USR_INPUT/H2/H2_EMIS_v3_CNTR/YR4/ctm3_restart_20110101.nc

# --------------------------------------------------------------------------
# Initialize the model run
# --------------------------------------------------------------------------
# Make the scratch directory if you're not already running this script from it
if [ ! -d $SCRATCH ]; then mkdir $SCRATCH; fi 

# Move the program and the necessary files to $SCRATCH
cp $MODELDIR/$PROGFILE                  $SCRATCH/osloctm3
# Replace env variables while moving the files
sed 's^$CTM3_USR_INPUT^'$CTM3_USR_INPUT'^g; s^$CICERO^'$CICERO'^g; s^$CTM3_INPUT^'$CTM3_INPUT'^g' $MODELDIR/$SCENDIR/$INPUTFILE > $SCRATCH/$INPUTFILE
# Copy the necessary tables and files  


mkdir $SCRATCH/tables

cp  $MODELDIR/tables $SCRATCH/

cp  $MODELDIR/tables/r42het_T159.dat $SCRATCH/tables/
cp  $MODELDIR/tables/P_meanT319_IFScy36r1_2005.nc $SCRATCH/tables/
cp  $MODELDIR/tables/tracer_list_all_h2.d $SCRATCH/tables/
cp  $MODELDIR/tables/scavenging_wet.inp $SCRATCH/tables/
cp  $MODELDIR/tables/scavenging_dry.inp $SCRATCH/tables/
cp  $MODELDIR/tables/atmos_std.dat $SCRATCH/tables/
cp  $MODELDIR/tables/scavenging_wet.inp $SCRATCH/tables/
cp  $MODELDIR/tables/scavenging_dry.inp $SCRATCH/tables/
cp  $MODELDIR/tables/light_dist.ott2010.dat $SCRATCH/tables/
cp  $MODELDIR/tables/FJX_spec.dat $SCRATCH/tables/
cp  $MODELDIR/tables/FJX_scat.dat $SCRATCH/tables/
cp  $MODELDIR/tables/FJX_UMaer.dat $SCRATCH/tables/
cp  $MODELDIR/tables/ratj_oc.d $SCRATCH/tables/
cp  $MODELDIR/tables/ratO1D.d $SCRATCH/tables/
cp  $MODELDIR/tables/polar_o3loss.dat $SCRATCH/tables/


sed 's^$CTM3_USR_INPUT^'$CTM3_USR_INPUT'^g; s^$CICERO^'$CICERO'^g; s^$CTM3_INPUT^'$CTM3_INPUT'^g' $MODELDIR/tables/$EMISFILE > $SCRATCH/tables/$EMISFILE_OUT

##for each in `grep -rh "'tables/*" $MODELDIR/$SCENDIR/$INPUTFILE`; do 
##    if [[ $each =~ "'tables" ]]; then 
##        FILE=`echo $each | tr -d "'"`
##        echo "Copying $FILE"
##        # Replace env variables while moving the files
##        sed 's^$CTM3_USR_INPUT^'$CTM3_USR_INPUT'^g; s^$CICERO^'$CICERO'^g; s^$CTM3_INPUT^'$CTM3_INPUT'^g' $MODELDIR/$FILE > $SCRATCH/$FILE
##    fi 
##done


# Link the input data
ln -fs $INPUT_DATA                      $SCRATCH/
cp $MODELDIR/$DUSTFILE                  $SCRATCH/
 
# CTM3 restart
echo "Coping $RESTARTFILE."
echo "WARNING: LNCR in example.inp has to be set accordingly."
if [[ $RESTARTFILE =~ ".sav" ]]; then 
    echo "WARNING: This is an old restart file."
    cp $RESTARTFILE                $SCRATCH/restart.sav
else
    cp $RESTARTFILE                $SCRATCH/restart.nc
fi

# if e90-tracer is used, may need restart file
cp $INPUT_DATA/restart_e90.sav $SCRATCH/


cp $H2SURF $SCRATCH/
cp $CH4SURF $SCRATCH/
# Copy the executing job file to $SCRATCH
cp $0                          $SCRATCH/$JOBFILENAME

# Go to work directory
cd $SCRATCH

#----------------------------------------------------------------------------
# Run the model
#----------------------------------------------------------------------------
./osloctm3 < $INPUTFILE > results.$PID
#----------------------------------------------------------------------------


#----------------------------------------------------------------------------
# Finish the run
#----------------------------------------------------------------------------
# Make a result directory
if [ ! -d $RESULTDIR ]; then mkdir $RESULTDIR; fi
echo 'Program completed, copy to '$RESULTDIR

# Copy restart files
if [ ! -d $RESTARTDIR ]; then mkdir $RESTARTDIR; fi
mv *restart*.nc     $RESTARTDIR/
mv osloctm3         $RESTARTDIR/
mv *.job            $RESTARTDIR/
mv *.inp            $RESTARTDIR/
mv *.sav            $RESTARTDIR/
mv dst_*.nc         $RESTARTDIR/
cp -r tables        $RESTARTDIR/
echo 'Results copied to '$RESTARTDIR

# Copy files to result directory
mv results.$PID     $RESULTDIR/
mv *.nc             $RESULTDIR/
mv *dta             $RESULTDIR/

echo 'Results copied to ${RESULTDIR}'


#----------------------------------------------------------------------------
# Organize the output
#----------------------------------------------------------------------------
#subdirs=( "air_density" "emissions" "monthly_means" "seasalt" "nitrate" "trop_strat_exchange" "sulphur" "scavenging_daily" "trop_tracer" )
#subdirs=( "air" "emissions" "monthly_means" "slt" "snn" "trop_strat_exchange" "sul" "scavenging_daily" "trp" "soa" "min" "moa" "bio" "ffc" "bfc"  )
#files=( "air" "emis" "avgsav" "slt" "snn" "ste" "sul" "scavenging_daily" "trp" "soa" "min" "moa" "bio" "ffc" "bfc" )

subdirs=( "emissions" "monthly_means" "scavenging_daily" "soa" )
files=( "emis" "avgsav" "scavenging_daily" "soa" )
cd $RESULTDIR

i=0
for sdir in ${subdirs[@]}; do
    if [ ! -d $sdir ]; then
        mkdir $sdir
    fi
    output=${files[i]}
    mv ${output}* $sdir
    i=$(($i + 1))
done

echo "Done."
#----------------------------------------------------------------------------
# Done
#----------------------------------------------------------------------------

